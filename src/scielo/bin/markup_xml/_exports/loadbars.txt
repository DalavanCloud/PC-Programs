Public Sub LoadBars(conf As clsConfig)
  Dim line As String, token As String, ok As Boolean, iBar As Long
  Dim fstring As New clsToken, button As New clsButton
  Dim bar As New clsBar, f As Integer
  Dim hasUpLevelButton As Boolean
  
  Dim file As New clsFile
  Dim barsFile As String
  Dim p As ClsPair
  Dim translate As Boolean
  Dim barName As String
  Dim description As String
  Dim term As String
  Dim tracing As String
  Dim translationFile As String
  
  Dim floatingBars As String
  
  Const errIDMet As String = "03"
  '-----------------------------
  On Error GoTo errlog
  
  tracing = tracing & vbCrLf & "1"
  barsFile = conf.directory & conf.fileBar
  translate = (InStr(conf.fileBar, "pt_") = 0)
  translationFile = Replace(barsFile, ".mds", ".tr")
  tracing = tracing & vbCrLf & "2"
  If translate And file.existFile(translationFile) Then
    tracing = tracing & vbCrLf & "3"
    barsFile = conf.directory & "pt_" & Mid(conf.fileBar, InStr(conf.fileBar, "_") + 1)
    Set translation = New collection
    f = FreeFile
    Open translationFile For Input As #f
    While Not EOF(f)
        Line Input #f, term
        tracing = tracing & vbCrLf & " 4 term=" & term
        Line Input #f, description
        tracing = tracing & vbCrLf & " 4 description=" & description
        Line Input #f, token
        
        tracing = tracing & vbCrLf & " 4 token=" & token
        Set p = New ClsPair
        tracing = tracing & vbCrLf & " 4 set"
        
        p.item1 = term
        tracing = tracing & vbCrLf & " p.item1"
        p.item2 = description
        tracing = tracing & vbCrLf & " p.item2"
        Call translation.add(p, p.item1)
        tracing = tracing & vbCrLf & " add"
    Wend
    Close #f
    
  End If
  floatingBars = ""

  f = FreeFile
  Open barsFile For Input As #f
  While Not EOF(f)
    ok = True
    Input #f, line
    fstring.GetTokens line, token: bar.SetName (token)
    tracing = tracing & vbCrLf & "5 " & line
    barName = token
    fstring.GetTokens line, token: bar.SetUpLevel (token)
        
    hasUpLevelButton = (token <> "nd" And token <> "start")
    
    
    Line Input #f, line
    While Len(line) > 0 And ok = True
      fstring.GetTokens line, token
      If token = LCase("down") Then
        button.SetShortTag (conf.tooltipsDown)
        fstring.GetTokens line, token: button.SetDownLevel (token)
      Else
        button.SetTag (token)
        '--cria uma lista das tags existentes na marcacao
        If FoundTag(token) = False Then
          listOfTag.add token, token
        End If
        '--
        tracing = tracing & vbCrLf & "6 " & token
        description = ""
        If translate Then
            term = barName & ";" & token
            description = getTranslation(term)
        End If
        fstring.GetTokens line, token
        If description = "" Then
            description = token
        End If
        button.SetShortTag (description)
        button.barName = bar.GetName
        fstring.GetTokens line, token: button.SetColor (token)
        fstring.GetTokens line, token: button.SetRepetitive (token)
        fstring.GetTokens line, token: button.SetAttrib (token)
        fstring.GetTokens line, token: button.SetDownLevel (token)
        
        'If floatingBars = "" Or barName = "ifloat" Then
        '    If token <> "" Then
        '        floatingBars = floatingBars & "|" & token & "|"
        '    End If
        'End If
        
    End If
      
      bar.InsertButton button, conf
      If Not EOF(f) Then
        Line Input #f, line
      Else
        ok = False
      End If
      Set button = Nothing
      
      'If MsgBox("fim ?", vbYesNo) = vbYes Then End
    Wend
    If hasUpLevelButton Then
      button.SetShortTag (conf.tooltipsUp): bar.InsertButton button, conf
      Set button = Nothing
    End If
    InsertBar bar: Set bar = Nothing: iBar = iBar + 1
  Wend
  Close #f
  Set fstring = Nothing
  Exit Sub
errlog:
  Dim trac As String
  trac = tracing
  If Len(trac) > 300 Then
    trac = "..." & Mid(trac, Len(trac) - 300)
  End If
    MsgBox "clslistBar.LoadBars " & err.description & " " & trac
  With mErr
    .LoadErr conf
    .BuildLog errIDObj & errIDMet, conf
  End With
  Close #f
  Set fstring = Nothing
End Sub